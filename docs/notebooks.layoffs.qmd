
---
format:
  html: {toc: true, toc-depth: 4, theme: cosmo, output-file: notebooks.layoffs.html}
fontsize: 0.9em
code-block-background: true
include-in-header: {text: '<link rel = "icon" href = "data:," />'}

---
<style></style><style>.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style><style>.clay-limit-image-width .clay-image {max-width: 100%}
</style>
<script src="notebooks.layoffs_files/md-default0.js" type="text/javascript"></script><script src="notebooks.layoffs_files/md-default1.js" type="text/javascript"></script><script src="notebooks.layoffs_files/plotly2.js" type="text/javascript"></script>

::: {.sourceClojure}
```clojure
(ns notebooks.layoffs
  (:require
   [clojure.string :as str]
   [tablecloth.api :as tc]
   [tablecloth.column.api :as tcc]
   [scicloj.metamorph.ml.toydata :as data]
   [scicloj.kindly.v4.kind :as kind]))
```
:::



# Layoffs in 2024

2023 and 2024 have been hard for tech. I have scraped the layoff  data from layoffs.fyi using [coupler.io](https://www.coupler.io/).

I am currently limited to the first 1,000 rows but I hope that will change once I gain a few
donors for the project.

If you know the author of [layoffs.fyi](https://layoffs.fyi) please show them this study.

If we had a live integration with Airtable we could essentially have a live monitor for layoffs in tech globally. A first of it's kind.

I am using the [scicloj](https://scicloj.github.io/) stack for this study.

Without further ado. Here's an analysis of tech layoffs in 2024


::: {.sourceClojure}
```clojure
(defn to-kebab-case [s]
  "replaces whitespaces in a string for the character \"-\" lowercases the entire string"
  (-> s
      (str/lower-case)
      (str/replace #" " "-")))
```
:::



::: {.sourceClojure}
```clojure
(def layoffs
  (-> "./data/layoffs.csv"
      (tc/dataset {:key-fn (comp keyword to-kebab-case)})))
```
:::


In order to start the study, an overview of the primary dataset is shown below. Here's the first row and headers for the set provided


::: {.sourceClojure}
```clojure
(kind/table (tc/head layoffs 1))
```
:::


::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive"><thead><tr><th>company</th><th>location-hq</th><th>#-laid-off</th><th>date</th><th>%</th><th>industry</th><th>source</th><th>list-of-employees-laid-off</th><th>stage</th><th>$-raised-(mm)</th><th>country</th><th>date-added</th></tr></thead><tbody><tr><td>Salesforce</td><td>SF Bay Area</td><td>300</td><td>2024-07-15</td><td></td><td>Sales</td><td>https://www.bloomberg.com/news/articles/2024-07-15/salesforce-cuts-about-300-jobs-in-latest-sign-of-tech-austerity</td><td></td><td>Post-IPO</td><td>65.0</td><td>United States</td><td>2024-07-15</td></tr></tbody></table>
```

:::


- Company
- Location of the headquarters(HQ)
- Number of people laid off
- Date of the event
- Industry
- Source. Often a link from a major news outlet. This means we exclude quiet layoffs
- List of employees laid off
- Stage. Refers to investment stage. e,g: seed, series, IPO, etc.
- Funding raised. Expressed in $USD in the order of millions
- Country
- Date added

There are a lot of angles to look at this from

TODO PUT OVERVIEW HERE
TODO EXTRACT GROUPINGS TO THEIR OWN FILE


## By country

The top 3 countries that were the most affected by reported mass layoffs in tech were:

- United States
- India
- United Kingdom


::: {.sourceClojure}
```clojure
(defn layoffs-by [ds coll]
  "Groups a dataset by the value of coll and adds a new column :total-layoffs which is a tcc/sum of group.#-laid-off"
  (-> layoffs
      (tc/group-by coll)
      (tc/aggregate {:total-layoffs (fn [ds]
                                      (-> ds
                                          :#-laid-off
                                          tcc/sum))})
      (tc/order-by :total-layoffs :desc)))
```
:::



::: {.sourceClojure}
```clojure
(def layoffs-by-country
  (layoffs-by layoffs :country))
```
:::



::: {.sourceClojure}
```clojure
(defn plotly-layoffs-by [ds y-axis-title title]
  {:data [{
           :x    (:$group-name ds)
           :y    (:total-layoffs ds)
           :type :bar
           :marker {:size 4 :colorscale :Viridis}}]
   :layout {
            :xaxis {:title y-axis-title :type :category}
            :yaxis {:title "People laid off" :type :log}
            :title title}})
```
:::



::: {.sourceClojure}
```clojure
(-> layoffs-by-country
    (tc/head 3)
    (kind/table))
```
:::


::: {.clay-table}

```{=html}
<table class="table table-hover table-responsive"><thead><tr><th>$group-name</th><th>total-layoffs</th></tr></thead><tbody><tr><td>United States</td><td>110170.0</td></tr><tr><td>India</td><td>14227.0</td></tr><tr><td>United Kingdom</td><td>10176.0</td></tr></tbody></table>
```

:::


The recession is pretty global but an industry like tech has always been very connected the G7. Add to that the common location for back offices, nearshoring & offshoring and you get very predictable groupings

The following chart has a logarithmic scale applied to it so be sure to hover on each bar to have a clear number
of layoffs over the desired country


::: {.sourceClojure}
```clojure
(kind/plotly
 (plotly-layoffs-by (layoffs-by layoffs :country) "Countries" "Layoffs by country"))
```
:::



```{=html}
<div style="height:400px;width:100%;"><script>Plotly.newPlot(document.currentScript.parentElement,
              [{"x":["United States","India","United Kingdom","Germany","Japan","Canada","Israel","Sweden","Kenya","Singapore","China","Cayman Islands","Netherlands","Indonesia","Brazil","Australia","Norway","Ireland","France","Czech Republic","Poland","Estonia","Chile","New Zealand","Nigeria","Ghana","Uruguay","Austria","Denmark","Spain","Finland","Belgium","South Korea","Romania","Lithuania","Hong Kong","Pakistan","Luxembourg","Mexico","Switzerland"],"y":[110170.0,14227.0,10176.0,9363.0,4000.0,2375.0,2373.0,2340.0,1699.0,1445.0,1085.0,1060.0,925.0,790.0,744.0,472.0,465.0,435.0,370.0,316.0,295.0,249.0,200.0,200.0,163.0,150.0,104.0,100.0,79.0,74.0,70.0,50.0,45.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],"type":"bar","marker":{"size":4,"colorscale":"Viridis"}}], {"xaxis":{"title":"Countries","type":"category"},"yaxis":{"title":"People laid off","type":"log"},"title":"Layoffs by country"}, {});</script></div>
```


It makes perfect sense for the chart to look like this as it seems to follow a pattern where
_the larger the tech economy, the harder the layoffs_. However this is just a hypothesis


### The larger the tech economy, the more layoffs?

There are a few caveats with attempting to overlay the size of an economy, the size of it's tech sector and the volume of the country's layoffs within the tech industry:

- The "tech" industry is an umbrella term. The tech industry may encompass different sub industries from country to country. Layoffs.fyi mostly has layoff data for the

- There is no objective metrics for errors of measure across each entry

- Layoffs can be attributed to a transnational decision. E,g: a company with an HQ in country A may opt for mass layoffs in it's office located in country B. But this study is attributing the layoffs to country B, even though the decision may come from the same company, located elsewhere.


## Where are the HQs located, by number of layoffs?


::: {.sourceClojure}
```clojure
(def layoffs-by-location-hq (layoffs-by layoffs :location-hq))
```
:::



::: {.sourceClojure}
```clojure
(kind/plotly
 (plotly-layoffs-by (tc/head layoffs-by-location-hq 50) "Location HQ" "Layoffs by location HQ"))
```
:::



```{=html}
<div style="height:400px;width:100%;"><script>Plotly.newPlot(document.currentScript.parentElement,
              [{"x":["SF Bay Area","Austin","London,Non-U.S.","Seattle","Walldorf,Non-U.S.","Boston","New York City","Bengaluru,Non-U.S.","Noida,Non-U.S.","Tokyo,Non-U.S.","Los Angeles","San Diego","Norwalk","Stockholm,Non-U.S.","Tel Aviv,Non-U.S.","St. Louis","Nairobi,Non-U.S.","Chicago","Portland","Singapore,Non-U.S.","Gurugram,Non-U.S.","Miami","Waterloo,Non-U.S.","Shanghai,Non-U.S.","Cayman Islands","Raleigh","Salt Lake City","Amsterdam,Non-U.S.","Dallas","Jakarta,Non-U.S.","Pittsburgh","Denver","Montreal,Non-U.S.","Sao Paulo,Non-U.S.","Columbus","Chennai,Non-U.S.","Berlin,Non-U.S.","Phoenix","Dublin,Non-U.S.","Atlanta","Sacramento","Philadelphia","Hamburg,Non-U.S.","Sydney,Non-U.S.","Paris,Non-U.S.","New Delhi,Non-U.S.","Milwaukee","Krakow,Non-U.S.","Tallinn,Non-U.S.","Minneapolis"],"y":[39026.0,22254.0,10119.0,8653.0,8000.0,7199.0,7006.0,6918.0,4620.0,4000.0,3568.0,3363.0,3103.0,2460.0,2155.0,2084.0,1699.0,1625.0,1598.0,1445.0,1390.0,1250.0,1200.0,1070.0,1000.0,978.0,930.0,925.0,818.0,790.0,784.0,783.0,778.0,662.0,645.0,615.0,573.0,564.0,450.0,449.0,409.0,400.0,400.0,382.0,370.0,350.0,259.0,250.0,249.0,246.0],"type":"bar","marker":{"size":4,"colorscale":"Viridis"}}], {"xaxis":{"title":"Location HQ","type":"category"},"yaxis":{"title":"People laid off","type":"log"},"title":"Layoffs by location HQ"}, {});</script></div>
```



## By Industry


::: {.sourceClojure}
```clojure
(def layoffs-by-industry (layoffs-by layoffs :industry))
```
:::



::: {.sourceClojure}
```clojure
(tc/head layoffs-by-industry 10)
```
:::


::: {.clay-dataset}
_unnamed [10 2]:

|   :$group-name | :total-layoffs |
|----------------|---------------:|
| Transportation |        22037.0 |
|          Other |        19256.0 |
|        Finance |        16818.0 |
|         Retail |        13495.0 |
|       Consumer |        12855.0 |
|       Hardware |        12472.0 |
|           Food |         9964.0 |
| Infrastructure |         9014.0 |
|     Healthcare |         5631.0 |
|  Manufacturing |         5484.0 |


:::



::: {.sourceClojure}
```clojure
(kind/plotly
 (plotly-layoffs-by (tc/head layoffs-by-industry 50) "Industry" "Layoffs by industry"))
```
:::



```{=html}
<div style="height:400px;width:100%;"><script>Plotly.newPlot(document.currentScript.parentElement,
              [{"x":["Transportation","Other","Finance","Retail","Consumer","Hardware","Food","Infrastructure","Healthcare","Manufacturing","Travel","Education","HR","Data","Media","Crypto","Security","Energy","Support","Sales","Marketing","Logistics","Recruiting","Real Estate","Aerospace","Fitness","Product","AI","Legal",null,"https:\/\/www.calcalistech.com\/ctechnews\/article\/rysmrkfua","Construction"],"y":[22037.0,19256.0,16818.0,13495.0,12855.0,12472.0,9964.0,9014.0,5631.0,5484.0,4787.0,4459.0,4393.0,3394.0,3309.0,2852.0,2632.0,2356.0,2116.0,2015.0,1485.0,1155.0,1028.0,886.0,811.0,773.0,705.0,262.0,130.0,35.0,0.0,0.0],"type":"bar","marker":{"size":4,"colorscale":"Viridis"}}], {"xaxis":{"title":"Industry","type":"category"},"yaxis":{"title":"People laid off","type":"log"},"title":"Layoffs by industry"}, {});</script></div>
```


Transport, finance, retail & consumer tech were the most affected. These are industries directly affected by the wave
of remote work too.

Working from home means a worker is less likely to spend in transportation, the high street or even plain consumer tech.

Finance stands out but it's an industry known for layoffs in mass. It doesn't come across as a surprise. It's a boom and bust industry.


```{=html}
<div style="background-color:grey;height:2px;width:100%;"></div>
```



```{=html}
<div><pre><small><small>source: src/notebooks/layoffs.clj</small></small></pre></div>
```
